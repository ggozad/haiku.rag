[project]

name = "haiku.rag"
description = "Agentic Retrieval Augmented Generation (RAG) with LanceDB"
version = "0.13.3"
authors = [{ name = "Yiorgis Gozadinos", email = "ggozadinos@gmail.com" }]
license = { text = "MIT" }
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.12"
keywords = ["RAG", "lancedb", "vector-database", "ml", "mcp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Operating System :: Microsoft :: Windows :: Windows 10",
    "Operating System :: Microsoft :: Windows :: Windows 11",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]

dependencies = [
    "docling>=2.58.0",
    "fastmcp>=2.13.0.2",
    "httpx>=0.28.1",
    "lancedb>=0.25.2",
    "pathspec>=0.12.1",
    "pydantic>=2.12.3",
    "pydantic-ai>=1.7.0",
    "pydantic-graph>=1.7.0",
    "python-dotenv>=1.2.1",
    "pyyaml>=6.0.3",
    "rich>=14.2.0",
    "tiktoken>=0.12.0",
    "typer>=0.19.2,<0.20.0",
    "watchfiles>=1.1.1",
]

[project.optional-dependencies]
voyageai = ["voyageai>=0.3.5"]
mxbai = ["mxbai-rerank>=0.1.6"]
a2a = ["fasta2a>=0.1.0"]
cohere = ["cohere>=5.0.0"]
zeroentropy = ["zeroentropy>=0.1.0a6"]

[project.scripts]
haiku-rag = "haiku.rag.cli:cli"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
exclude = ["/docs", "/examples", "/tests", "/docker", "/.github"]

[tool.hatch.build.targets.wheel]
packages = ["src/haiku"]

[dependency-groups]
dev = [
    "datasets>=4.3.0",
    "logfire>=4.14.2",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.22",
    "pydantic-evals>=1.7.0",
    "pre-commit>=4.3.0",
    "pyright>=1.1.407",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "ruff>=0.14.2",
]

[tool.ruff]
line-length = 88
# Enable Flake's "E" and "F" codes by default and "I" for sorting imports.
# Exclude a variety of commonly ignored directories.

[tool.ruff.lint]
select = [
    "E",
    "F",
    "UP",
    "I",
] # Enable Flake's "E" and "F" codes by default and "I" for sorting imports
ignore = ["E501"]
per-file-ignores = { "__init__.py" = ["F401", "F403"] }
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pyright]
venvPath = "."
venv = ".venv"
pythonVersion = "3.12"

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "session"
asyncio_mode = "auto"

# pyproject.toml
filterwarnings = ["error", "ignore::UserWarning", "ignore::DeprecationWarning"]
